@page "/CreateAccount"
@inject IAccountService AccountService
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Account</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="NewAccount" OnValidSubmit="AddAccount" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="zipcode" class="form-label">Zipcode:</label> 
                <InputNumber id="zipcode" @bind-Value="NewAccount.Zipcode" class="form-control" /> 
                <ValidationMessage For="() => NewAccount.Zipcode" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="firstname" class="form-label">Firstname:</label> 
                <InputText id="firstname" @bind-Value="NewAccount.Firstname" class="form-control" /> 
                <ValidationMessage For="() => NewAccount.Firstname" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">Lastname:</label> 
                <InputText id="lastname" @bind-Value="NewAccount.Lastname" class="form-control" /> 
                <ValidationMessage For="() => NewAccount.Lastname" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="NewAccount.Email" class="form-control" /> 
                <ValidationMessage For="() => NewAccount.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="username" class="form-label">Username:</label> 
                <InputText id="username" @bind-Value="NewAccount.Username" class="form-control" /> 
                <ValidationMessage For="() => NewAccount.Username" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label> 
                <InputText id="password" @bind-Value="NewAccount.Password" class="form-control" /> 
                <ValidationMessage For="() => NewAccount.Password" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="createddate" class="form-label">CreatedDate:</label> 
                <InputDate id="createddate" @bind-Value="NewAccount.CreatedDate" class="form-control" /> 
                <ValidationMessage For="() => NewAccount.CreatedDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="birthdate" class="form-label">Birthdate:</label> 
                <InputDate id="birthdate" @bind-Value="NewAccount.Birthdate" class="form-control" /> 
                <ValidationMessage For="() => NewAccount.Birthdate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isdeleted" class="form-label">IsDeleted:</label> 
                <InputCheckbox id="isdeleted" @bind-Value="NewAccount.IsDeleted" class="form-check-input" /> 
                <ValidationMessage For="() => NewAccount.IsDeleted" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>



@code {

    public Account NewAccount { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddAccount()
    {
        await AccountService.CreateAccount(NewAccount);
    }
}
